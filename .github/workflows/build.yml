name: Build

on: push

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { msystem: MINGW32, env: i686 }
          - { msystem: MINGW64, env: x86_64 }
    defaults:
      run:
        shell: msys2 {0}  
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.msystem}}
      - name: disable certain things
        run: |
          mkpasswd > /etc/passwd
          mkgroup > /etc/group
          sed -i '/db/d' /etc/nsswitch.conf
      - name: install packages
        run: |
          pacman --noconfirm -Syu
          pacman --noconfirm -Sy git mingw-w64-${{matrix.env}}-gcc mingw-w64-${{matrix.env}}-make
      - name: Build
        run: mingw32-make dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.msystem}} build
          path: '*.tar.gz'
  
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    steps:
      - name: Set Environment Variables
        run: echo "INSTALL_REF=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
      - uses: actions/download-artifact@v2
      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{env.INSTALL_REF}}
          name: Release ${{env.INSTALL_REF}}
          draft: false
          prerelease: false
          files: '**/*.tar.gz'
